server:
  port: 7070

spring:
  application:
    name: springcloud-zuul
  profiles:
    active: dev
  cloud:
    config:
#      label: main
#      name: zuul
#      profile: test
      discovery:
        service-id: springcloud-config
        enabled: true   # bootstrap.yml中已经不适用这个配置了
  servlet:
    multipart:
      max-file-size: 2MB  # 修改最大上传文件限制，默认1MB

# 路由规则：http://[网关地址]:[端口号]/[prefix]/[微服务实例名称]/[请求地址路径]
zuul:
  SendErrorFilter:
    error:
      disable: true
  sensitive-headers: Access-Control-Allow-Origin
  ignored-headers: Access-Control-Allow-Credentials,Access-Control-Allow-Origin,H-APP-Id,Token,APPToken
  prefix: /api                           # 请求前缀
  routes:
    news-user: /news-user/**
    news-service-admin: /news-service-admin/**
    news-service-article: /news-service-article/**    # 只要路由id和微服务实例id相同，就可以简写成这样去配置路由规则
    news-files: /news-files/**
  host:
    connect-timeout-millis: 15000        # http连接超时要比Hystrix的大
    socket-timeout-millis: 60000         # socket超时
#    news-service-article:               # 配置微服务的路由id，微服务的实例id
#      path: /news-service-article/**    # 请求路径（前缀）
#      service-id: news-service-article  # 通过微服务id在eureka注册中心里的地址，用这个就不用url: http://localhost:8001了
#      url: http://localhost:8001        # 请求转发到指定的微服务所在的ip地址，但是不稳定，端口号改了这里也得改

# ribbon的超时时间要小于zuul的超时时间
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

# ip请求限制的参数配置
ipBlacklist:
  continueCounts: ${counts:20}    # ip连续请求的次数
  timeInterval: ${interval:10}    # 判断ip连续请求的时间跨度，单位：秒
  limitTime: ${time:15}           # 限制多长时间内不能在请求，单位：秒
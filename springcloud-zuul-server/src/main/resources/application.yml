server:
  port: 7070

spring:
  application:
    name: springcloud-zuul
  profiles:
    active: dev
  cloud:
    config:
      label: main
      name: zuul
      profile: test
      discovery:
        service-id: springcloud-config
        enabled: true
  zipkin:
    base-url: http://localhost:9411/    # 配置zipkin采集的服务地址，数据会发送到这里
    sender:
      type: web       # 数据采集的传输通信方式，web：http的形式
  sleuth:
    sampler:
      probability: 0.8    # 数据采样比例（百分数），0-1

# 路由规则：http://[网关地址]:[端口号]/[prefix]/[微服务实例名称]/[请求地址路径]
zuul:
  prefix: /api                           # 请求前缀
  routes:
    news-user: /news-user/**
    news-service-article: /news-service-article/**    # 只要路由id和微服务实例id相同，就可以简写成这样去配置路由规则
  host:
    connect-timeout-millis: 15000        # http连接超时要比Hystrix的大
    socket-timeout-millis: 60000         # socket超时
#    news-service-article:               # 配置微服务的路由id，微服务的实例id
#      path: /news-service-article/**    # 请求路径（前缀）
#      service-id: news-service-article  # 通过微服务id在eureka注册中心里的地址，用这个就不用url: http://localhost:8001了
#      url: http://localhost:8001        # 请求转发到指定的微服务所在的ip地址，但是不稳定，端口号改了这里也得改

# ribbon的超时时间要小于zuul的超时时间
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

# ip请求限制的参数配置
ipBlacklist:
  continueCounts: ${counts:10}    # ip连续请求的次数
  timeInterval: ${interval:10}    # 判断ip连续请求的时间跨度，单位：秒
  limitTime: ${time:15}           # 限制多长时间内不能在请求，单位：秒